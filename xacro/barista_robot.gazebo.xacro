<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="barista_robot">

    <xacro:macro name="gazebo_elements">
        <gazebo reference="base_link">
            <xacro:if value="${robot_name == 'rick'}">
                <material>Gazebo/Blue</material>
            </xacro:if>
            <xacro:if value="${robot_name == 'morty'}">
                <material>Gazebo/Red</material>
            </xacro:if>
        </gazebo>

        <gazebo reference="left_wheel">
            <kp>1000000000000000000000000000.0</kp>
            <kd>1000000000000000000000000000.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
            <material>Gazebo/Black</material>
        </gazebo>

        <gazebo reference="right_wheel">
            <kp>1000000000000000000000000000.0</kp>
            <kd>1000000000000000000000000000.0</kd>
            <mu1>10.0</mu1>
            <mu2>10.0</mu2>
            <material>Gazebo/Black</material>
        </gazebo>

        <gazebo reference="front_pitch_link">
            <kp>1000000000000000000000000000.0</kp>
            <kd>1000000000000000000000000000.0</kd>
            <mu1>0.5</mu1>
            <mu2>0.5</mu2>
            <material>Gazebo/Grey</material>
        </gazebo>

        <gazebo reference="back_pitch_link">
            <kp>1000000000000000000000000000.0</kp>
            <kd>1000000000000000000000000000.0</kd>
            <mu1>0.5</mu1>
            <mu2>0.5</mu2>
            <material>Gazebo/Grey</material>
        </gazebo>

        <gazebo reference="standoff_rod_1">
            <material>Gazebo/Grey</material>
        </gazebo>

        <gazebo reference="standoff_rod_2">
            <material>Gazebo/Grey</material>
        </gazebo>

        <gazebo reference="standoff_rod_3">
            <material>Gazebo/Grey</material>
        </gazebo>

        <gazebo reference="standoff_rod_4">
            <material>Gazebo/Grey</material>
        </gazebo>

        <gazebo reference="cup_holder_tray">
            <xacro:if value="${robot_name == 'rick'}">
                <material>Gazebo/Blue</material>
            </xacro:if>
            <xacro:if value="${robot_name == 'morty'}">
                <material>Gazebo/Red</material>
            </xacro:if>
        </gazebo>

        <!-- PLUGINS -->

        <gazebo>
            <plugin name="box_bot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
            <ros>
                <namespace>/${robot_name}</namespace>
                <remapping>~/out:=joint_states</remapping>
            </ros>
            <update_rate>30</update_rate>

            <joint_name>joint_left_wheel</joint_name>
            <joint_name>joint_right_wheel</joint_name>
            <joint_name>front_yaw_joint</joint_name>
            <joint_name>back_yaw_joint</joint_name>
            <joint_name>front_roll_joint</joint_name>
            <joint_name>back_roll_joint</joint_name>
            <joint_name>front_pitch_joint</joint_name>
            <joint_name>back_pitch_joint</joint_name>
            
            </plugin>
        </gazebo>

        <gazebo>
            <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
                <ros>
                    <namespace>/${robot_name}</namespace>
                    <remapping>/cmd_vel:=cmd_vel</remapping>
                </ros>
            
                <update_rate>40</update_rate>
                <!-- Wheel joints -->
                <left_joint>joint_left_wheel</left_joint>
                <right_joint>joint_right_wheel</right_joint>
                <!-- Kinematics -->
                <wheel_separation>0.1</wheel_separation>
                <wheel_diameter>0.07</wheel_diameter>
                <publish_odom>true</publish_odom>
                <!-- TF frames -->
                <odometry_frame>${robot_name}/odom</odometry_frame>>
                <robot_base_frame>${robot_name}/base_link</robot_base_frame>
                <publish_odom_tf>true</publish_odom_tf>
                <publish_wheel_tf>false</publish_wheel_tf>
                <!-- Limits -->
                <max_wheel_torque>1.0</max_wheel_torque>
                <max_wheel_acceleration>2.0</max_wheel_acceleration>

            </plugin>
        </gazebo>

        <gazebo reference="laser_scan_frame">
            <sensor name="sensor_ray" type="ray">
                <pose>0 0 0 0 0 0</pose>
                <ray>
                <scan>
                    <horizontal>
                    <samples>200</samples>
                    <resolution>1.0</resolution>
                    <min_angle>-3.14</min_angle>
                    <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>5.0</max>
                </range>
                </ray>
                <always_on>true</always_on>
                <visualize>true</visualize>
                <update_rate>30.0</update_rate>
                <plugin name="laser" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <namespace>/${robot_name}</namespace>
                    <remapping>~/out:=scan</remapping>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>laser_scan_frame</frame_name>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>

</robot>